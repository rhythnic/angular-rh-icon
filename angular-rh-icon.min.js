!function(n,t){"use strict";t.module("rh.icon",[]).provider("rhIconCollection",function(){var n;this.setFilePath=function(t){n=t},this.$get=["$http",function(t){var e={},i=[],o=t({method:"GET",url:n,cache:!0});return{registerIcon:function(n){return o.then(function(t){if(!(n in e)){var o=t.data[n];e[n]=o,e[n].viewBox=[o.x,o.y,o.w,o.h].join(" "),i.push(n)}return e[n]})},getIcons:function(){return e},getIconIDs:function(){return i},getAvailableIconIDs:function(){return o.then(function(n){return Object.keys(n.data)})}}}]}).directive("rhViewbox",function(){return function(n,t,e){e.$observe("rhViewbox",function(n){t.attr("viewBox",n)})}}).directive("rhD",function(){return function(n,t,e){e.$observe("rhD",function(n){t.attr("d",n)})}}).directive("rhDef",function(){return{restrict:"EA",replace:!0,template:['<svg style="display:none"><defs>','<symbol ng-repeat="id in iconIDs" rh-viewbox="{{icons[id].viewBox}}" id="{{id}}">','<path rh-d="{{icons[id].path}}" /></symbol></defs></svg>'].join(""),scope:{},controller:["$scope","rhIconCollection",function(n,t){n.iconIDs=t.getIconIDs(),n.$watch("iconIDs",function(){n.icons=t.getIcons()})}]}}).directive("rhIcon",function(){return{restrict:"EA",replace:!0,scope:{icon:"@",title:"@"},template:'<svg rh-viewbox="{{vb}}"><use xlink:href=""><title>{{title}}</title></use></svg>',controller:["$scope","rhIconCollection",function(n,t){t.registerIcon(n.icon).then(function(t){n.vb=[0,0,t.w,t.h].join(" ")})}],compile:function(){return{pre:function(n,t){t.find("use").attr("xlink:href","#"+n.icon)}}}}})}(window,angular,void 0);